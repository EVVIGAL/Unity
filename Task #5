using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Events;

public class Door : MonoBehaviour
{
    public static UnityAction<bool> IsEntered;

    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.TryGetComponent<Player>(out Player player))
        {
            IsEntered?.Invoke(true);
        }
    }

    private void OnTriggerExit2D(Collider2D collision)
    {
        if (collision.TryGetComponent<Player>(out Player player))
        {
            IsEntered?.Invoke(false);
        }
    }
}

public class Alarm : MonoBehaviour
{
    [SerializeField] private AudioSource _audioSource;

    private Coroutine _volumeController;

    private float _minVolume = 0.0f;
    private float _maxVolume = 1.0f;
    private float _increaseRate = 0.15f;
    private float _targetVolume;

    private void Start()
    {
        Door.IsEntered += IsEntered;
        _audioSource.volume = _minVolume;
    }

    private void Update()
    {
        if (_audioSource.isPlaying && _audioSource.volume == _minVolume)
        {
            _audioSource.Stop();
        }
    }

    public void IsEntered(bool isEntered)
    {
        if (isEntered)
        {
            _targetVolume = _maxVolume;

            if (!_audioSource.isPlaying) _audioSource.Play();

            RestartCoroutine();
        }

        if (!isEntered)
        {
            _targetVolume = _minVolume;
            RestartCoroutine();
        }
    }

    private IEnumerator ChangeVolume()
    {
        while (_audioSource.volume >= _minVolume)
        {
            _audioSource.volume = Mathf.MoveTowards(_audioSource.volume, _targetVolume, _increaseRate * Time.deltaTime);
            yield return null;
        }
    }

    private void RestartCoroutine()
    {
        if (_volumeController != null) StopCoroutine(_volumeController);
        _volumeController = StartCoroutine(ChangeVolume());
    }
}
