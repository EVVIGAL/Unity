using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Door : MonoBehaviour
{
    public bool IsEntered { get; private set; }

    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.TryGetComponent<Player>(out Player player))
        {
            IsEntered = true;
        }
    }

    private void OnTriggerExit2D(Collider2D collision)
    {
        if (collision.TryGetComponent<Player>(out Player player))
        {
            IsEntered = false;
        }
    }
}

public class Alarm : MonoBehaviour
{
    [SerializeField] private Door _door;
    [SerializeField] private AudioSource _audioSource;
    private float _minVolume = 0.0f;
    private float _maxVolume = 1.0f;
    private float _increaseRate = 0.15f;
    private float _targetVolume;
    private IEnumerator _coroutine;
    private bool _coroutineIsWorking;

    private void Start()
    {
        _coroutine = ChangeVolume();
        _audioSource.volume = _minVolume;
    }

    public void Update()
    {
        if (_door.IsEntered) isEntered();

        if (!_door.IsEntered) isOut();

        if (_audioSource.isPlaying && _audioSource.volume == _minVolume)
        {
            _audioSource.Stop();
        }
    }

    public void isEntered()
    {
        _targetVolume = _maxVolume;

        if (!_audioSource.isPlaying) _audioSource.Play();

        StopCoroutine();
        StartCoroutine();
    }

    public void isOut()
    {
        _targetVolume = _minVolume;
        StopCoroutine();
        StartCoroutine();
    }

    private IEnumerator ChangeVolume()
    {
        while (_audioSource.volume >= _minVolume)
        {
            _audioSource.volume = Mathf.MoveTowards(_audioSource.volume, _targetVolume, _increaseRate * Time.deltaTime);
            yield return null;
        }       
    }

    private void StopCoroutine()
    {
        if (_coroutineIsWorking)
        {
            StopCoroutine(_coroutine);
            _coroutineIsWorking = false;
        }
    }

    private void StartCoroutine()
    {
        if (!_coroutineIsWorking)
        {
            StartCoroutine(_coroutine);
            _coroutineIsWorking = true;
        }      
    }
}
